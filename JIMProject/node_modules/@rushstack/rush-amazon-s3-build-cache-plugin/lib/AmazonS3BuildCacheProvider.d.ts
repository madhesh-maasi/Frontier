/// <reference types="node" />
import { ITerminal } from '@rushstack/node-core-library';
import { ICloudBuildCacheProvider, RushSession } from '@rushstack/rush-sdk';
export interface IAmazonS3BuildCacheProviderOptions {
    s3Bucket: string;
    s3Region: string;
    s3Prefix?: string;
    isCacheWriteAllowed: boolean;
}
export declare class AmazonS3BuildCacheProvider implements ICloudBuildCacheProvider {
    private readonly _options;
    private readonly _s3Prefix;
    private readonly _environmentCredential;
    private readonly _isCacheWriteAllowedByConfiguration;
    private __credentialCacheId;
    private _rushSession;
    get isCacheWriteAllowed(): boolean;
    private __s3Client;
    constructor(options: IAmazonS3BuildCacheProviderOptions, rushSession: RushSession);
    private get _credentialCacheId();
    private _getS3ClientAsync;
    tryGetCacheEntryBufferByIdAsync(terminal: ITerminal, cacheId: string): Promise<Buffer | undefined>;
    trySetCacheEntryBufferAsync(terminal: ITerminal, cacheId: string, objectBuffer: Buffer): Promise<boolean>;
    updateCachedCredentialAsync(terminal: ITerminal, credential: string): Promise<void>;
    updateCachedCredentialInteractiveAsync(terminal: ITerminal): Promise<void>;
    deleteCachedCredentialsAsync(terminal: ITerminal): Promise<void>;
}
//# sourceMappingURL=AmazonS3BuildCacheProvider.d.ts.map