{"version":3,"file":"RushAmazonS3BuildCachePlugin.js","sourceRoot":"","sources":["../src/RushAmazonS3BuildCachePlugin.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,oEAAsD;AAItD,MAAM,gCAAgC,GAAkD,0BAAM,CAAC,IAAI,CACjG,8BAA8B,EAC9B,OAAO,CACR,CAAC;AAEF,MAAM,WAAW,GAAW,0BAA0B,CAAC;AA2BvD;;GAEG;AACH,MAAa,4BAA4B;IAAzC;QACS,eAAU,GAAW,WAAW,CAAC;IAwB1C,CAAC;IAtBQ,KAAK,CAAC,WAAwB,EAAE,UAA6B;QAClE,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,EAAE;YACjD,WAAW,CAAC,sCAAsC,CAChD,WAAW,EACX,CAAC,gBAAgB,EAA8B,EAAE;gBAI/C,MAAM,EAAE,qBAAqB,EAAE,GAAG,gBAA+B,CAAC;gBAClE,OAAO,IAAI,gCAAgC,CAAC,0BAA0B,CACpE;oBACE,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;oBACxC,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;oBACxC,mBAAmB,EAAE,CAAC,CAAC,qBAAqB,CAAC,mBAAmB;iBACjE,EACD,WAAW,CACZ,CAAC;YACJ,CAAC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAzBD,oEAyBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Import } from '@rushstack/node-core-library';\nimport type { IRushPlugin, RushSession, RushConfiguration } from '@rushstack/rush-sdk';\nimport type { AmazonS3BuildCacheProvider } from './AmazonS3BuildCacheProvider';\n\nconst AmazonS3BuildCacheProviderModule: typeof import('./AmazonS3BuildCacheProvider') = Import.lazy(\n  './AmazonS3BuildCacheProvider',\n  require\n);\n\nconst PLUGIN_NAME: string = 'AmazonS3BuildCachePlugin';\n\n/**\n * @public\n */\nexport interface IAmazonS3ConfigurationJson {\n  /**\n   * The Amazon S3 region of the bucket to use for build cache (e.g. \"us-east-1\").\n   */\n  s3Region: string;\n\n  /**\n   * The name of the bucket in Amazon S3 to use for build cache.\n   */\n  s3Bucket: string;\n\n  /**\n   * An optional prefix (\"folder\") for cache items.\n   */\n  s3Prefix?: string;\n\n  /**\n   * If set to true, allow writing to the cache. Defaults to false.\n   */\n  isCacheWriteAllowed?: boolean;\n}\n\n/**\n * @public\n */\nexport class RushAmazonS3BuildCachePlugin implements IRushPlugin {\n  public pluginName: string = PLUGIN_NAME;\n\n  public apply(rushSession: RushSession, rushConfig: RushConfiguration): void {\n    rushSession.hooks.initialize.tap(PLUGIN_NAME, () => {\n      rushSession.registerCloudBuildCacheProviderFactory(\n        'amazon-s3',\n        (buildCacheConfig): AmazonS3BuildCacheProvider => {\n          type IBuildCache = typeof buildCacheConfig & {\n            amazonS3Configuration: IAmazonS3ConfigurationJson;\n          };\n          const { amazonS3Configuration } = buildCacheConfig as IBuildCache;\n          return new AmazonS3BuildCacheProviderModule.AmazonS3BuildCacheProvider(\n            {\n              s3Region: amazonS3Configuration.s3Region,\n              s3Bucket: amazonS3Configuration.s3Bucket,\n              s3Prefix: amazonS3Configuration.s3Prefix,\n              isCacheWriteAllowed: !!amazonS3Configuration.isCacheWriteAllowed\n            },\n            rushSession\n          );\n        }\n      );\n    });\n  }\n}\n"]}