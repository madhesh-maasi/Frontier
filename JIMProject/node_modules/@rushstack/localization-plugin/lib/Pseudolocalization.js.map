{"version":3,"file":"Pseudolocalization.js","sourceRoot":"","sources":["../src/Pseudolocalization.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;AAE3D,sDAA8B;AAI9B,MAAa,kBAAkB;IACtB,MAAM,CAAC,kBAAkB,CAAC,OAA6B;QAC5D,iFAAiF;QACjF,IAAA,iBAAO,EAAC,cAAc,CAAC,CAAC;QACxB,MAAM,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,sBAAsB;QAEpE,YAAY,CAAC,MAAM,mCACd,YAAY,CAAC,MAAM,GACnB,OAAO,CACX,CAAC;QACF,OAAO,YAAY,CAAC,GAAG,CAAC;IAC1B,CAAC;CACF;AAZD,gDAYC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport decache from 'decache';\n\nimport { IPseudolocaleOptions } from './interfaces';\n\nexport class Pseudolocalization {\n  public static getPseudolocalizer(options: IPseudolocaleOptions): (str: string) => string {\n    // pseudolocale maintains static state, so we need to load it as isolated modules\n    decache('pseudolocale');\n    const pseudolocale = require('pseudolocale'); // eslint-disable-line\n\n    pseudolocale.option = {\n      ...pseudolocale.option,\n      ...options\n    };\n    return pseudolocale.str;\n  }\n}\n"]}