import { BaseScriptAction, IBaseScriptActionOptions } from './BaseScriptAction';
import { IPhase, IPhasedCommand } from '../../api/CommandLineConfiguration';
/**
 * Constructor parameters for BulkScriptAction.
 */
export interface IPhasedScriptActionOptions extends IBaseScriptActionOptions<IPhasedCommand> {
    enableParallelism: boolean;
    incremental: boolean;
    watchForChanges: boolean;
    disableBuildCache: boolean;
    actionPhases: string[];
    phases: Map<string, IPhase>;
}
/**
 * This class implements bulk commands which are run individually for each project in the repo,
 * possibly in parallel. The task selector is abstract and is implemented for phased or non-phased
 * commands.
 *
 * @remarks
 * Bulk commands can be defined via common/config/command-line.json.  Rush's predefined "build"
 * and "rebuild" commands are also modeled as bulk commands, because they essentially just
 * execute scripts from package.json in the same as any custom command.
 */
export declare class PhasedScriptAction extends BaseScriptAction<IPhasedCommand> {
    private readonly _enableParallelism;
    private readonly _isIncrementalBuildAllowed;
    private readonly _watchForChanges;
    private readonly _disableBuildCache;
    private readonly _repoCommandLineConfiguration;
    private readonly _actionPhases;
    private readonly _phases;
    private _changedProjectsOnly;
    private _selectionParameters;
    private _verboseParameter;
    private _parallelismParameter;
    private _ignoreHooksParameter;
    constructor(options: IPhasedScriptActionOptions);
    runAsync(): Promise<void>;
    /**
     * Runs the command in watch mode. Fundamentally is a simple loop:
     * 1) Wait for a change to one or more projects in the selection (skipped initially)
     * 2) Invoke the command on the changed projects, and, if applicable, impacted projects
     *    Uses the same algorithm as --impacted-by
     * 3) Goto (1)
     */
    private _runWatch;
    protected onDefineParameters(): void;
    /**
     * Runs a single invocation of the command
     */
    private _runOnce;
    private _doBeforeTask;
    private _doAfterTask;
    private _collectTelemetry;
}
//# sourceMappingURL=PhasedScriptAction.d.ts.map