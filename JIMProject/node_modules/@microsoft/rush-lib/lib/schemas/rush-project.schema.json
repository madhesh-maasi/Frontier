{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Configuration for Rush's build cache.",
  "description": "For use with the Rush tool, this file provides per-project configuration options. See http://rushjs.io for details.",

  "type": "object",
  "properties": {
    "$schema": {
      "description": "Part of the JSON Schema standard, this optional keyword declares the URL of the schema that the file conforms to. Editors may download the schema and use it to perform syntax highlighting.",
      "type": "string"
    },

    "extends": {
      "description": "Optionally specifies another JSON config file that this file extends from. This provides a way for standard settings to be shared across multiple projects.",
      "type": "string"
    },

    "buildCacheOptions": {
      "type": "object",
      "properties": {
        "disableBuildCache": {
          "description": "Selectively disables the build cache for this project. The project will never be restored from cache. This is a useful workaround if that project's build scripts violate the assumptions of the cache, for example by writing files outside the project folder. Where possible, a better solution is to improve the build scripts to be compatible with caching.",
          "type": "boolean"
        },

        "optionsForCommands": {
          "description": "Allows for fine-grained control of cache for individual Rush commands.",
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string",
                "description": "The Rush command name, as defined in custom-commands.json"
              },

              "disableBuildCache": {
                "description": "Selectively disables the build cache for this come. The project will never be restored from cache. This is a useful workaround if that project's build scripts violate the assumptions of the cache, for example by writing files outside the project folder. Where possible, a better solution is to improve the build scripts to be compatible with caching.",
                "type": "boolean"
              }
            }
          }
        }
      }
    },

    "projectOutputFolderNames": {
      "type": "array",
      "description": "Specify the folders where your toolchain writes its output files. If enabled, the Rush build cache will restore these folders from the cache. The strings are folder names under the project root folder. These folders should not be tracked by Git. They must not contain symlinks.",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },

    "incrementalBuildIgnoredGlobs": {
      "type": "array",
      "description": "The incremental analyzer can skip Rush commands for projects whose input files have not changed since the last build. Normally, every Git-tracked file under the project folder is assumed to be an input. Set incrementalBuildIgnoredGlobs to ignore specific files, specified as globs relative to the project folder. The list of file globs will be interpreted the same way your .gitignore file is.",
      "items": {
        "type": "string"
      }
    },

    "phaseOptions": {
      "type": "array",
      "description": "Options for individual phases.",
      "items": {
        "type": "object",
        "required": ["phaseName"],
        "properties": {
          "phaseName": {
            "type": "string",
            "description": "The name of the phase. This is the name that appears in command-line.json."
          },

          "projectOutputFolderNames": {
            "type": "array",
            "description": "Specify the folders where this phase writes its output files. If enabled, the Rush build cache will restore these folders from the cache. The strings are folder names under the project root folder. These folders should not be tracked by Git. They must not contain symlinks.",
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      }
    }
  }
}
