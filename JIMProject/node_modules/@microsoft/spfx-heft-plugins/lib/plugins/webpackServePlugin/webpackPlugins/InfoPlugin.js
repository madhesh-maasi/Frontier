"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfoPlugin = void 0;
const url_1 = require("url");
const terminal_1 = require("@rushstack/terminal");
const constants_1 = require("../../../utilities/constants");
const PLUGIN_NAME = 'InfoPlugin';
class InfoPlugin {
    constructor(options) {
        this._terminal = options.terminal;
        this._port = options.port || constants_1.DEFAULT_PORT;
        this._tempFolderName = options.tempFolderName || constants_1.DEFAULT_TEMP_FOLDER;
        this._setDebugLoader = options.setDebugLoader || false;
        this._debugLoaderPath =
            options.debugLoaderPath || `https://localhost:${this._port}/${constants_1.DEFAULT_LOADER_ASSEMBLY_FILENAME}`;
    }
    /**
     * Print information to the developer's console.
     *
     * @public
     * @param compiler
     */
    apply(compiler) {
        compiler.hooks.done.tapAsync(PLUGIN_NAME, (stats, callback) => {
            const debugParams = new url_1.URLSearchParams({
                debug: 'true',
                noredir: 'true',
                debugManifestsFile: `https://localhost:${this._port}/${this._tempFolderName}/manifests.js`
            });
            if (this._setDebugLoader) {
                debugParams.set('loader', this._debugLoaderPath);
            }
            terminal_1.PrintUtilities.printMessageInBox('To load your scripts in SPDF, use this debug query string:', this._terminal);
            this._terminal.writeLine(`?${debugParams.toString()}\n`);
            callback();
        });
    }
}
exports.InfoPlugin = InfoPlugin;
//# sourceMappingURL=InfoPlugin.js.map