"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.prefetchAPIAccessTokens = void 0;
var tslib_1 = require("tslib");
var sp_diagnostics_1 = require("@microsoft/sp-diagnostics");
var AadHttpClientFactory_1 = tslib_1.__importDefault(require("./AadHttpClientFactory"));
/**
 * This function will prefetch tokens apps may need so that the apps do not need to wait for
 * AAD to generate token on call
 * @internal
 *
 * @param serviceScope - service scope to be used for fetching creating AadHttpClientFactory
 * @param endPointsString - a string of endpoints delimited by a comma and space
 */
function prefetchAPIAccessTokens(serviceScope, endPointsMap) {
    var initiatePrefetchTokenQosMonitor = new sp_diagnostics_1._QosMonitor('InitiatePrefetchTokenQosMonitor');
    var aadHttpClientFactory = new AadHttpClientFactory_1.default(serviceScope);
    aadHttpClientFactory
        .getClient(endPointsMap)
        .then(function (aadHttpClient) {
        return aadHttpClient._prefetchTokens();
    })
        .then(function () {
        initiatePrefetchTokenQosMonitor.writeSuccess();
    })
        .catch(function (error) {
        initiatePrefetchTokenQosMonitor.writeUnexpectedFailure(error);
    });
}
exports.prefetchAPIAccessTokens = prefetchAPIAccessTokens;
//# sourceMappingURL=PrefetchAPIAccessTokens.js.map